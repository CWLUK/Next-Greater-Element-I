class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        vector<int> result;
        unordered_map <int, int> umap;
        stack<int> stack;
        
        for (auto i: nums2){
            while (!stack.empty() && stack.top()<i){
                umap[stack.top()] = i;
                stack.pop();
            }
            stack.push(i);
        }
        
        for (auto j: nums1){
            if (umap.count(j)){
                result.push_back(umap[j]);
            } else result.push_back(-1);
        }

        return result;
    }
};

/*
class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        vector<int> result;
        unordered_map <int, int> umap;
        for (int i=0; i<nums2.size(); i++){
            umap[nums2[i]] = -1;
            for (int j=i+1; j<nums2.size(); j++){
                if (nums2[i]<nums2[j]){
                    umap[nums2[i]] = nums2[j];
                    break;
                }
            }
        }
        for (int k=0; k<nums1.size(); k++){
            result.push_back(umap[nums1[k]]);
        }
        return result;
    }
};

*/
